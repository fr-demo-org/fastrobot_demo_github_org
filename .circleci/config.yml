version: 2
# copied from the CircleCI demo hashicorp/learn-terraform-circleci

jobs:
  plan:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:0.13.5
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply
      - run:
          name: terraform show plan for comment
          command: terraform show -no-color > tfplan.txt
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: hashicorp/terraform:0.13.5
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan_comment:
    docker:
      - image: cloudposse/github-commenter:0.8.0
    working_directory: /code
    steps:
      - checkout
      - attach_workspace:
          at: /code
      - run:
          name: Post plan to PR comment
          command: |-
            export CIRCLE_PR_NUMBER=${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}
            if [ -z $CIRCLE_PR_NUMBER ]; then echo "Not a pull request - aborting"; exit 0; fi
            cat /code/tfplan.txt | github-commenter \
              -owner ${CIRCLE_PROJECT_USERNAME} \
              -repo ${CIRCLE_PROJECT_REPONAME} \
              -number $CIRCLE_PR_NUMBER \
              -delete-comment-regex "Output from" \
              -type pr \
              -template_file /code/.circleci/plan-comment.tpl

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan:
          context:
            - Terraform State
            - Github Admin
      - plan_comment:
          context:
            - Github Admin
          requires:
            - plan
      - hold-apply:
          context:
            - Terraform State
            - Github Admin
          type: approval
          requires:
            - plan
          filters:
            branches:
              only: main
      - apply:
          context:
            - Terraform State
            - Github Admin
          requires:
            - hold-apply
          filters:
            branches:
              only: main
